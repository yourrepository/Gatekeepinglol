function isNumber(str)
    if tonumber(str) ~= nil or str == 'inf' then
        return true
    end
end

local tspeed = 0.3
local hb = game:GetService("RunService").Heartbeat
local tpwalking = _G.tpwToggle or false -- Default to false
local player = game:GetService("Players")
local lplr = player.LocalPlayer
local chr = lplr.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
local UIS = game:GetService("UserInputService") -- UserInputService for key input

-- Define a function to set the toggle explicitly
_G.setTPWalking = function(state)
    tpwalking = state
    _G.tpwToggle = tpwalking -- Save the state globally
    print("TPWalking is now:", tpwalking and "ON" or "OFF")
end

-- Keybinding to toggle tpwalking on or off with the F key
UIS.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == Enum.KeyCode.F then
        if tpwalking then
            _G.setTPWalking(false) -- Turn off
        else
            _G.setTPWalking(true) -- Turn on
        end
    end
end)

-- Main loop for tpwalking
while hb:Wait() and chr and hum and hum.Parent do
    if tpwalking and hum.MoveDirection.Magnitude > 0 then
        if tspeed and isNumber(tspeed) then
            chr:TranslateBy(hum.MoveDirection * tonumber(tspeed))
        else
            chr:TranslateBy(hum.MoveDirection)
        end
    end
end
